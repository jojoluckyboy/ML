# -*- coding:utf-8 -*-

import itertools
import numpy as np
import MySQLdb
import sys
from multiprocessing import Pool
from multiprocessing.dummy import Pool as ThreadPool
import time



# conn = httplib.HTTPConnection("expert.78500.cn")
#
# payload = "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"page\"\r\n\r\n2\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"sort_num\"\r\n\r\n0\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
#
# headers = {
#     'content-type': "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
#     'accept': "application/json, text/javascript, */*",
#     'accept-encoding': "gzip, deflate, sdch",
#     'accept-language': "zh-CN,zh;q=0.8",
#     'cache-control': "no-cache",
#     'connection': "keep-alive",
#     'host': "expert.78500.cn",
#     'pragma': "no-cache",
#     'referer': "http://expert.78500.cn/new/ssq/2017085/",
#     'user-agent': "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36",
#     'x-requested-with': "XMLHttpRequest",
#     'postman-token': "6ea11474-2420-ab11-4d87-371058d96711"
# }
# payload = urllib.urlencode(payload)
# conn.request("POST", "/new/ssq/2017085/", payload, headers)
#
# res = conn.getresponse()
# data = res.read()
#
# print(data.decode("utf-8"))
a = np.array([8, 12, 14, 15, 20, 21, 25, 27, 31])

list1 = list(itertools.combinations(a, 6))
print(list1)
# # print(set(list1[0]))
# # print type(list1[0])
# print(len(list1))

# 列举2、3、4、5、6匹配模式
balllist = np.arange(1, 34)
#528
#listb2 = list(itertools.combinations(balllist, 2))
# print len(listb2)
# #5456
listb3 = list(itertools.combinations(balllist, 3))
# print len(listb3)
# #40920
#listb4 = list(itertools.combinations(balllist, 4))
# print len(listb4)
#237336
#listb5 = list(itertools.combinations(balllist, 5))
# print len(listb5)
# #1107568
# listb6 = list(itertools.combinations(balllist, 6))
# print len(listb6)
# listb7 = list(itertools.combinations(balllist, 7))
# print len(listb7)
# listb8 = list(itertools.combinations(balllist, 8))
# print len(listb8)
# listb9 = list(itertools.combinations(balllist, 9))
# print len(listb9)
# listb10 = list(itertools.combinations(balllist, 10))
# print len(listb10)

try:
    conn = MySQLdb.connect(host='localhost', user='root', passwd='wwc@icinfo', port=3306)
    cur = conn.cursor()

    conn.select_db('ssq')

    count = cur.execute('select redComp from ssqrealtime')
    print 'there has %s rows record' % count

    # result=cur.fetchone()
    # print result
    # print 'ID: %s info %s' % result
    #
    # results=cur.fetchmany(5)
    # for r in results:
    #     print r
    #
    # print '=='*10
    # cur.scroll(0,mode='absolute')
    #
    results = cur.fetchall()
    results = list(results)

    conn.commit()
    cur.close()
    conn.close()

    # origin = sys.stdout
    # f = open('E:/file.txt', 'w')
    # sys.stdout = f
# #二元匹配模式计算
    dictSort = {}

    start = time.clock()
    for j in range(0, len(listb3)):

        count2 = 0
        for i in range(0, len(results)):
            listMatch = set(map(eval, results[i][0].split(" ")))
            # print(listMatch)
            resultMatch = set(listb3[j]) & listMatch
            if len(resultMatch) == 3:
                count2 = count2 + 1
                continue
            else:
                continue
        else:
            # print("二元匹配模式" + str(listb2[j]) + "结果正确为："+ str(count2))
            dictSort["三元位置匹配模式" + str(listb3[j]) + "结果正确为："] = count2

    else:
        dictSort2 = {}
        dictSort2 = sorted(dictSort.items(), key=lambda x: x[1], reverse=False)
    print "%s %s" %("2线程测试耗时", time.clock() - start), "second"

    origin = sys.stdout
    f = open('E:/file.txt', 'w')
    sys.stdout = f
    for item in dictSort2:
        lstring = str(item).decode('string_escape').replace('(', '').replace(')', '').replace('\'', '').replace('式',
                                                                                                                '式(') \
            .replace('结', ')结').replace('\'', '').replace(',', '')
        print(lstring)

    sys.stdout = origin
    f.close()

# #三元匹配模式计算
#     dictSort = {}
#     start = time.clock()
#     for j in range(0, len(listb4)):
#
#         count3 = 0
#         for i in range(0, len(results)):
#             listMatch = set(map(eval, results[i][0].split(" ")))
#             # print(listMatch)
#             resultMatch = set(listb4[j]) & listMatch
#             if len(resultMatch) == 4:
#                 count3 = count3 + 1
#                 continue
#             else:
#                 continue
#         else:
#             # print("二元匹配模式" + str(listb2[j]) + "结果正确为："+ str(count2))
#             dictSort["三元匹配模式" + str(listb4[j]) + "结果正确为："] = count3
#
#     else:
#         dictSort4 = {}
#         dictSort4 = sorted(dictSort.items(), key=lambda x: x[1], reverse=False)
#     print "%s %s" %("pool线程计时", time.clock() - start), "second"
    # for item in dictSort4:
    #     lstring = str(item).decode('string_escape').replace('(', '').replace(')', '').replace('\'', '').replace('式', '式(')\
    #        .replace('结', ')结').replace('\'', '') .replace(',', '')
    #     print(lstring)

#

# # 五元匹配模式计算
#     dictSort = {}
#     for j in range(0, len(listb5)):
#
#         count5 = 0
#         for i in range(0, len(results)):
#             listMatch = set(map(eval, results[i][0].split(" ")))
#             # print(listMatch)
#             resultMatch = set(listb5[j]) & listMatch
#             if len(resultMatch) == 5:
#                 count5 = count5 + 1
#                 continue
#             else:
#                 continue
#         else:
#             # print("二元匹配模式" + str(listb2[j]) + "结果正确为："+ str(count2))
#             dictSort["五元匹配模式" + str(listb5[j]) + "结果正确为："] = count5
#
#     else:
#         dictSort5 = {}
#         dictSort5 = sorted(dictSort.items(), key=lambda x: x[1], reverse=False)
#
#     for item in dictSort5:
#         lstring = str(item).decode('string_escape').replace('(', '').replace(')', '').replace('\'', '').replace('式', '式(')\
#            .replace('结', ')结').replace('\'', '') .replace(',', '')
#         print(lstring)

#     dictSort10 = {}
#     for j in range(0, len(listb10)):
#
#         count10 = 0
#         for i in range(0, len(results)):
#             listMatch = set(map(eval, results[i][0].split(" ")))
#             # print(listMatch)
#             resultMatch = set(listb10[j]) & listMatch
#             if len(resultMatch) == 6:
#                 count10 = count10 + 1
#                 continue
#             else:
#                 continue
#         else:
#             # print("二元匹配模式" + str(listb2[j]) + "结果正确为："+ str(count2))
#             dictSort10["十元匹配模式" + str(listb10[j]) + "结果正确为："] = count10
#
#     else:
#         dictSort102 = {}
#         dictSort102 = sorted(dictSort10.items(), key=lambda x: x[1], reverse=True)
#
#     for item in dictSort102:
#         lstring = str(item).decode('string_escape').replace('(', '').replace(')', '').replace('\'', '').replace('式', '式(')\
#            .replace('结', ')结').replace('\'', '') .replace(',', '')
#         print(lstring)
#
    # sys.stdout = origin
    # f.close()
except MySQLdb.Error, e:
       print "Mysql Error %d: %s" % (e.args[0], e.args[1])

